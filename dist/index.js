import*as e from"react";const{useEffect:t,useState:n,useRef:i}=e,o=/Windows.*Chrome|Windows.*Firefox|Linux.*Chrome/,s={enabled:!0,url:"https://ipv4.icanhazip.com/",timeout:5e3,interval:5e3};class r{pollingConfigs;static instance;intervalId;constructor(e=s){this.pollingConfigs=e}setIntervalId(e){this.intervalId=e}getIntervalId(){return this.intervalId}static getInstance(e){return r.instance||(r.instance=new r),r.instance.setPollingConfigs(e),r.instance}setPollingConfigs(e){o.test(navigator?.userAgent)?"object"==typeof e&&e.enabled?this.pollingConfigs={...s,...e}:e&&(this.pollingConfigs=s):this.pollingConfigs={...s,enabled:!1}}ping({url:e,timeout:t}){return new Promise(((n,i)=>{const o=new XMLHttpRequest;o.onerror=i,o.ontimeout=i,o.onreadystatechange=()=>{o.readyState===o.HEADERS_RECEIVED&&(o.status?n():i())},o.open("HEAD",e),o.timeout=t,o.send()}))}}const a=(e=!0)=>{const[i,o]=n(!0),s=r.getInstance(e),a=()=>{o(!0)},l=()=>{o(!1)};return t((()=>{window.addEventListener("online",a),window.addEventListener("offline",l);let e=s.getIntervalId();const{enabled:t,url:n,timeout:i,interval:r}=s.pollingConfigs;return t&&n&&(e&&clearInterval(e),e=window.setInterval((async()=>{try{await s.ping({url:n,timeout:i}),o(!0)}catch(e){o(!1)}}),r),s.setIntervalId(e)),()=>{window.removeEventListener("online",a),window.removeEventListener("offline",l),t&&clearInterval(e)}}),[]),{isOnline:i}};export{a as useOnlineEffect};
